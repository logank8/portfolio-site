import{_ as n,c as o,j as t,n as s,a as i,o as l}from"./chunks/framework.D_tc8BW1.js";const r="/assets/0115.tU8LglBB.mp4",d="_header_woxry_2",m="_exampleDisplay_woxry_6",p="_highlighthead_woxry_14",h={header:d,exampleDisplay:m,highlighthead:p},k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"eviction-game.md","filePath":"eviction-game.md"}'),g={name:"eviction-game.md"};function u(a,e,c,f,w,v){return l(),o("div",null,[t("h1",{class:s(a.$style.header)},"Eviction of the Damned",2),e[0]||(e[0]=t("h2",null,"Project Summary",-1)),e[1]||(e[1]=t("p",null,"I worked with a team of 4 other developers over 4 months to create a 2D dungeon crawler video game in C++ and OpenGL with an ECS structure. In addition to playing a large role in the project management and debugging, I was responsible for the graphics programming, scene management, BOIDS algorithm implementation for the swarm enemy, tilemap implementation, 2d asset uploads and audio.",-1)),e[2]||(e[2]=t("h2",null,"Highlights",-1)),t("h4",{class:s(a.$style.highlighthead)},"Particle system",2),e[3]||(e[3]=t("p",null,"I added a smoke effect using a particle system that went created an emitter after an enemy dies.",-1)),e[4]||(e[4]=t("video",{controls:"",loop:"",width:"500",height:"240",autoplay:"",muted:""},[t("source",{src:r,type:"video/mp4"})],-1)),e[5]||(e[5]=t("p",null,[i("To add this into an ECS, I kept each particle as simple structs stored in the ParticleEmitter component of the Smoke entity created. I mainly used "),t("a",{href:"https://www.lri.fr/perso/~mbl/ENS/IG2/devoir2/files/docs/particles.pdf"},"this article"),i(" by Jeff Lander to guide me, especially on adding things like variance and randomness in direction.")],-1)),e[6]||(e[6]=t("p",null,"In Lander's article the pools of particles are implemented using a linked list, which I believe would be possible to implement within our ECS, so I may look into this as a way to reduce unnecessarily redundant storage on large amounts of particles.",-1)),t("h4",{class:s(a.$style.highlighthead)},"Global illumination model",2),e[7]||(e[7]=t("h4",null,"Boids swarm simulation",-1)),e[8]||(e[8]=t("h4",null,"Scene management",-1)),e[9]||(e[9]=t("h4",null,"2D Physics system",-1))])}const y={$style:h},S=n(g,[["render",u],["__cssModules",y]]);export{k as __pageData,S as default};
